{"version":3,"sources":["actions/types.js","reducers/user.js","reducers/usuarioHuella.js","reducers/tienda.js","reducers/message.js","reducers/asistencia.js","reducers/index.js","Utils/pagination.js","components/asistencia/Listar.js","actions/asistencia.js","services/asistencia.js","Utils/dataSetAsistencia.js","pages/Home.jsx","pages/Historico.jsx","services/user.js","Utils/getMessageError.js","actions/messages.js","actions/user.js","actions/usuarioHuella.js","services/tienda.js","actions/tienda.js","pages/Login.jsx","pages/NotFound.jsx","components/user/create.jsx","components/user/listar.jsx","pages/Usuarios.jsx","components/tienda/create.jsx","components/tienda/listar.jsx","pages/Tiendas.jsx","pages/UsuariosEnrrolados.jsx","services/usuarioHuella.js","components/Menu.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["DELETE_USER","SAVE_USER","GET_USERS","LOGIN_USER","LOGIN_USER_OUT","USER_LOADING","USER_LOADING_OFF","SET_PAYLOAD","UPDATE_USER","BLOQUEAR_USER","DESBLOQUEAR_USER","DELETE_USER_HUELLA","GET_USERS_HUELLAS","HUELLA_LOADING","HUELLA_LOADING_OFF","DELETE_TIENDA","SAVE_TIENDA","GET_TIENDAS","TIENDA_LOADING","TIENDA_LOADING_OFF","UPDATE_TIENDA","GET_ASISTENCIAS","CLEAR_MESSAGE","SET_MESSAGE","emptyUser","id","nombre","apellido","rut","password","rol","INITIAL_STATE","getUsers","newUser","payload","loading","HANDLERS","state","action","users","concat","filter","post","user","index","findIndex","listUsers","map","us","bloqueado","ReduxSauceTypes","DEFAULT","createReducer","getHuellas","huellas","huella","getTiendas","newTienda","tienda","tiendas","sendMessage","messages","title","message","status","getAsistencias","asistencias","combineReducers","userHuella","Pagination","dataPerPage","totalData","paginate","pageNumbers","i","Math","ceil","push","className","number","onClick","connect","useState","dataFilter","setDataFilter","currentPage","setCurrentPage","filterData","asistencia","usuario","includes","indexOfLastUser","indexOfFirstUser","currentData","slice","Row","Col","name","type","placeholder","onChange","e","target","value","Table","striped","bordered","hover","fecha_salida","td","undefined","format","date","fecha_entrada","length","pageNumber","xs","getAll","dispatch","axios","get","URL_API","then","res","data","catch","error","console","log","response","DataSetAsistencia","listAsistencia","columns","fechaEntrada","moment","horaEntrada","fechaSalida","horaSalida","diferenciaHoras","diff","style","font","sz","ExcelFile","ReactExport","ExcelSheet","history","useHistory","fechaBusqueda","setFechaBusqueda","titulo","listAsistencias","useEffect","buscarInformacion","a","color","height","width","timeout","Button","dataSet","Container","variant","element","filename","subtract","inicio","setInicio","termino","setTermino","selected","toDate","dateFormat","process","messageError","initial","errors","msg","setMessage","loadingIni","loadingOff","createdSuccess","updateSuccess","bloquearSuccess","desbloquearSuccess","loginSuccess","loginOutUser","removeSuccess","login","userLogin","clearMessage","localStorage","setItem","JSON","stringify","setRut","setPassword","addPost","swal","Form","Group","controlId","Label","NotFoundPage","props","to","save","saveNewUser","update","put","updateUser","userUpdate","setId","setNombre","setApellido","createUser","modificarUser","buttons","remove","userId","delete","deleteUserById","bloquear","bloquearUser","desbloquear","desbloquearUser","rutFilter","setRutFilter","userPerPage","filterUsers","currentUsers","botonBloqueo","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","setUserUpdate","saveNewTienda","updateTienda","tiendaUpdate","createTienda","modificarTienda","deleteTiendaById","filterTiendas","setUpdateTienda","removeHuella","deleteHuella","nroSinHuellas","filterUsersHuellas","userMap","id_huella","existeHuella","find","id_usuario","currentUsersHuella","confirmarEliminar","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","logOutUser","setPayload","handleClick","path","localPayload","getItem","parse","classes","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","ListItem","activeClassName","active","component","NavLink","button","ListItemIcon","ListItemText","primary","removeItem","logOut","window","container","document","body","setTimeout","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","store","createStore","reducer","composeWithDevTools","applyMiddleware","logger","thunk","App","exact","Home","Historico","Login","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45bdf9ab.chunk.js","sourcesContent":["export const DELETE_USER = 'DELETE_USER';\r\nexport const SAVE_USER = 'SAVE_USER';\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_OUT = 'LOGIN_USER_OUT';\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADING_OFF = 'USER_LOADING_OFF';\r\nexport const SET_PAYLOAD = 'SET_PAYLOAD';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const BLOQUEAR_USER = 'BLOQUEAR_USER';\r\nexport const DESBLOQUEAR_USER = 'DESBLOQUEAR_USER';\r\n\r\nexport const DELETE_USER_HUELLA = 'DELETE_USER_HUELLA';\r\nexport const GET_USERS_HUELLAS = 'GET_USERS_HUELLAS';\r\nexport const HUELLA_LOADING = 'HUELLA_LOADING';\r\nexport const HUELLA_LOADING_OFF = 'HUELLA_LOADING_OFF';\r\n\r\nexport const DELETE_TIENDA = 'DELETE_TIENDA';\r\nexport const SAVE_TIENDA = 'SAVE_TIENDA';\r\nexport const GET_TIENDAS = 'GET_TIENDAS';\r\nexport const TIENDA_LOADING = 'TIENDA_LOADING';\r\nexport const TIENDA_LOADING_OFF = 'TIENDA_LOADING_OFF';\r\nexport const UPDATE_TIENDA = 'UPDATE_TIENDA';\r\n\r\nexport const GET_ASISTENCIAS = 'GET_ASISTENCIAS';\r\nexport const GET_ASISTENCIAS_TIENDA = 'GET_ASISTENCIAS_TIENDA';\r\n\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\r\nexport const SET_MESSAGE = 'SET_MESSAGE';\r\n ","import { DELETE_USER, SAVE_USER, GET_USERS , LOGIN_USER, USER_LOADING, USER_LOADING_OFF, LOGIN_USER_OUT, SET_PAYLOAD, UPDATE_USER, BLOQUEAR_USER, DESBLOQUEAR_USER } from '../actions/types';\r\nimport { createReducer, Types as ReduxSauceTypes } from 'reduxsauce';\r\n\r\nconst emptyUser = { \r\n  id: '',\r\n  nombre: '', \r\n  apellido: '', \r\n  rut: '', \r\n  password: '', \r\n  rol: ''\r\n};\r\n\r\nconst INITIAL_STATE  = {\r\n\tgetUsers: [],\r\n  newUser: emptyUser,\r\n  payload: emptyUser,\r\n  loading: false\r\n}\r\n\r\nconst fetchData = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getUsers: action.users\r\n});\r\n\r\nconst remove = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getUsers: state.getUsers.filter(post => post.id !== action.id )\r\n});\r\n\r\nconst save = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getUsers: state.getUsers.concat(action.newUser)\r\n});\r\n\r\nconst update = (state = INITIAL_STATE, action) => {\r\n  let index = state.getUsers.findIndex((user) => user.id === action.user.id);\r\n  if(index && index > 0){\r\n    state.getUsers[index] = action.user;\r\n  }\r\n  \r\n  return ({\r\n    ...state\r\n  })\r\n};\r\n\r\nconst setPayload= (state = INITIAL_STATE, action) => ({\r\n  ...state,\r\n  payload: action.payload,\r\n});\r\n\r\nconst login = (state = INITIAL_STATE, action) => ({\r\n  ...state,\r\n  payload: action.payload.user\r\n});\r\n\r\nconst logOut = (state = INITIAL_STATE) => ({\r\n  ...state,\r\n  payload: emptyUser\r\n});\r\n\r\nconst loadingIni = (state = INITIAL_STATE) => ({\r\n  ...state,\r\n  loading: true\r\n});\r\n\r\nconst loadingOff = (state = INITIAL_STATE) => ({\r\n  ...state,\r\n  loading: false\r\n});\r\n\r\nconst bloquear = (state = INITIAL_STATE, action) => {\r\n  let user = action.user;\r\n  let listUsers = [...state.getUsers].map(us => {\r\n    if(us.id === user.id){\r\n      us.bloqueado = 1;\r\n    }\r\n    return us;\r\n  })\r\n\r\n  return ({\r\n    ...state,\r\n    getUsers: listUsers\r\n  })\r\n};\r\n\r\nconst desbloquear = (state = INITIAL_STATE, action) => {\r\n  let user = action.user;\r\n  let listUsers = [...state.getUsers].map(us => {\r\n    if(us.id === user.id){\r\n      us.bloqueado = 0;\r\n    }\r\n    return us;\r\n  })\r\n\r\n  return ({\r\n    ...state,\r\n    getUsers: listUsers\r\n  })\r\n};\r\n\r\nconst HANDLERS = {\r\n  [GET_USERS]: fetchData,\r\n  [SAVE_USER]: save,\r\n  [DELETE_USER]: remove,\r\n  [LOGIN_USER]: login,\r\n  [USER_LOADING]: loadingIni,\r\n  [USER_LOADING_OFF]: loadingOff,\r\n  [LOGIN_USER_OUT]: logOut,\r\n  [SET_PAYLOAD]: setPayload,\r\n  [UPDATE_USER]: update,\r\n  [BLOQUEAR_USER]: bloquear,\r\n  [DESBLOQUEAR_USER]: desbloquear,\r\n\r\n  [ReduxSauceTypes.DEFAULT]: state => state\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);","import { DELETE_USER_HUELLA, GET_USERS_HUELLAS , HUELLA_LOADING, HUELLA_LOADING_OFF } from '../actions/types';\r\nimport { createReducer, Types as ReduxSauceTypes } from 'reduxsauce';\r\n\r\nconst INITIAL_STATE  = {\r\n\tgetHuellas: [],\r\n  loading: false\r\n}\r\n\r\nconst fetchData = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getHuellas: action.huellas\r\n});\r\n\r\nconst remove = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getHuellas: state.getHuellas.filter(huella => huella.id !== action.id ),\r\n});\r\n\r\nconst loadingIni = (state = INITIAL_STATE) => ({\r\n  ...state,\r\n  loading: true\r\n});\r\n\r\nconst loadingOff = (state = INITIAL_STATE) => ({\r\n  ...state,\r\n  loading: false\r\n});\r\n\r\nconst HANDLERS = {\r\n  [GET_USERS_HUELLAS]: fetchData,\r\n  [DELETE_USER_HUELLA]: remove,\r\n  [HUELLA_LOADING]: loadingIni,\r\n  [HUELLA_LOADING_OFF]: loadingOff,\r\n  \r\n  [ReduxSauceTypes.DEFAULT]: state => state\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);","import { DELETE_TIENDA, SAVE_TIENDA, GET_TIENDAS , TIENDA_LOADING, TIENDA_LOADING_OFF, UPDATE_TIENDA } from '../actions/types';\r\nimport { createReducer, Types as ReduxSauceTypes } from 'reduxsauce';\r\n\r\nlet tiendaEmpty = {\r\n    id: 0,\r\n    nombre: \"\"\r\n};\r\n\r\nconst INITIAL_STATE  = {\r\n    getTiendas: [],\r\n    newTienda: tiendaEmpty,\r\n    loading: false\r\n}\r\n\r\nconst fetchData = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getTiendas: action.tiendas\r\n});\r\n\r\nconst remove = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getTiendas: state.getTiendas.filter(tienda => tienda.id !== action.id )\r\n});\r\n\r\nconst save = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getTiendas: state.getTiendas.concat(action.tienda)\r\n});\r\n\r\nconst update = (state = INITIAL_STATE, action) => {\r\n  let index = state.getTiendas.findIndex(tienda => tienda.id === action.tienda.id);\r\n  if(index && index > 0){\r\n    state.getTiendas[index] = action.tienda;\r\n  }\r\n  \r\n  return ({\r\n    ...state\r\n  })\r\n};\r\n\r\nconst loadingIni = (state = INITIAL_STATE) => ({\r\n  ...state,\r\n  loading: true\r\n});\r\n\r\nconst loadingOff = (state = INITIAL_STATE) => ({\r\n  ...state,\r\n  loading: false\r\n});\r\n\r\nconst HANDLERS = {\r\n  [DELETE_TIENDA]: remove,\r\n  [SAVE_TIENDA]: save,\r\n  [GET_TIENDAS]: fetchData,\r\n  [TIENDA_LOADING]: loadingIni,\r\n  [TIENDA_LOADING_OFF]: loadingOff,\r\n  [UPDATE_TIENDA]: update,\r\n  \r\n  [ReduxSauceTypes.DEFAULT]: state => state\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);","import { CLEAR_MESSAGE, SET_MESSAGE } from '../actions/types';\r\nimport { createReducer, Types as ReduxSauceTypes } from 'reduxsauce';\r\n\r\nconst INITIAL_STATE  = {\r\n  sendMessage: false,\r\n  messages: {\r\n      title: '',\r\n      message: '',\r\n      status: ''\r\n  },\r\n  loading: false\r\n}\r\n\r\nconst clearMessage = (state = INITIAL_STATE) => ({\r\n    ...state,\r\n    sendMessage: false,\r\n    messages: {\r\n      title: '',\r\n      message: '',\r\n      status: ''\r\n    }\r\n});\r\n\r\nconst setMessage = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    sendMessage: true,\r\n    messages: action.messages\r\n});\r\n\r\nconst HANDLERS = {\r\n  [CLEAR_MESSAGE]: clearMessage,\r\n  [SET_MESSAGE]: setMessage,\r\n  \r\n  [ReduxSauceTypes.DEFAULT]: state => state\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);","import { GET_ASISTENCIAS } from '../actions/types';\r\nimport { createReducer, Types as ReduxSauceTypes } from 'reduxsauce';\r\n\r\nconst INITIAL_STATE  = {\r\n    getAsistencias: [],\r\n}\r\n\r\nconst fetchData = (state = INITIAL_STATE, action) => ({\r\n    ...state,\r\n    getAsistencias: action.asistencias\r\n});\r\n\r\n\r\nconst HANDLERS = {\r\n  [GET_ASISTENCIAS]: fetchData,\r\n  \r\n  [ReduxSauceTypes.DEFAULT]: state => state\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);","import { combineReducers } from 'redux';\r\nimport users from './user';\r\nimport userHuella from './usuarioHuella';\r\nimport tiendas from './tienda';\r\nimport messages from './message';\r\nimport asistencias from './asistencia';\r\n\r\nexport default combineReducers({\r\n\tusers,\r\n\tuserHuella,\r\n\tmessages,\r\n\ttiendas,\r\n\tasistencias\r\n});","import React from 'react';\r\n\r\nconst Pagination = ({ dataPerPage, totalData, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalData / dataPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)}  className='page-link cursor-pointer'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, {useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nimport { connect } from 'react-redux';\r\nimport Pagination from '../../Utils/pagination';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Listar = ({asistencias}) => {\r\n\r\n    const [dataFilter, setDataFilter] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\tconst [dataPerPage] = useState(8);\r\n\r\n    const filterData = asistencias.filter(asistencia => {\r\n        if(asistencia.usuario.rut){\r\n            if(asistencia.usuario.rut.includes(dataFilter)){\r\n                return asistencia\r\n            }\r\n        }\r\n    });\r\n\r\n\tconst indexOfLastUser = currentPage * dataPerPage;\r\n\tconst indexOfFirstUser = indexOfLastUser - dataPerPage;\r\n\tconst currentData = filterData.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n\tconst paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\tconst tdSalida = (fecha_salida) => {\r\n\t\tif(fecha_salida === null || fecha_salida === undefined){\r\n\t\t\treturn (\r\n\t\t\t\t<td> En turno  </td>\r\n\t\t\t)\r\n\t\t}else{\r\n\t\t\treturn (\r\n\t\t\t\t<td> <Moment format=\"DD/MM/YYYY HH:mm\"  date={fecha_salida} />  </td>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n    return(\r\n        <div>\r\n\r\n\t\t\t<Row className=\"mt-3 mb-2\">\r\n\t\t\t\t<Col className='d-flex'>\r\n\t\t\t\t\t<label className='labelSearch'> Filtrar</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tname='search' \r\n\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\tclassName='form-control searchInput' \r\n\t\t\t\t\t\tplaceholder='Ingrese Rut ' \r\n\t\t\t\t\t\tonChange={e => setDataFilter(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t    </Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Table striped bordered hover className='mb-0'>\r\n\t\t\t    <thead>\r\n\t\t\t    \t<tr>\r\n\t\t\t\t        <th> Tienda </th>\r\n\t\t\t\t        <th> Rut </th>\r\n\t\t\t\t        <th> Nombre </th>\r\n                        <th> Apellido </th>\r\n                        <th> Fecha Entrada </th>\r\n                        <th> Fecha Salida </th>\r\n\t\t\t        </tr>\r\n\t\t\t    </thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcurrentData.map((asistencia, i) => {\r\n\t\t\t\t\t\t\tconst td = tdSalida(asistencia.fecha_salida);\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t\t<td> {asistencia.tienda.nombre} </td>\r\n\t\t\t\t\t\t\t\t\t<td> {asistencia.usuario.rut} </td>\r\n\t\t\t\t\t\t\t\t\t<td> {asistencia.usuario.nombre} </td>\r\n\t\t\t\t\t\t\t\t\t<td> {asistencia.usuario.apellido} </td>\r\n\t\t\t\t\t\t\t\t\t<td> <Moment format=\"DD/MM/YYYY HH:mm\"  date={asistencia.fecha_entrada} />  </td>\r\n\t\t\t\t\t\t\t\t\t{td}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className='d-flex'>\r\n\t\t\t\t\t<Pagination dataPerPage={dataPerPage} totalData={filterData.length} paginate={paginate} />\r\n\t\t\t    </Col>\r\n\t\t\t\t<Col xs={5} className='text-right'>\r\n\t\t\t\t\t<p className='mb-0 mt-1 mr-2'> Mostrando {currentData.length} de {filterData.length} Registros </p>\r\n\t\t\t    </Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({}) => ({});\r\n\r\nexport default connect(mapStateProps, {})(Listar);","import { GET_ASISTENCIAS } from './types';\r\nimport { getAsistenciasFetch } from '../services/asistencia';\r\n\r\nexport const getAll = () => dispatch => {\r\n\tgetAsistenciasFetch()\r\n\t\t.then(response => {\r\n\t\t\tdispatch({\r\n                type: GET_ASISTENCIAS,\r\n                asistencias: response.asistencias\r\n            });\r\n\t\t})\r\n\t\t.catch( () => {\r\n\t\t\tdispatch({\r\n                type: GET_ASISTENCIAS,\r\n                asistencias: []\r\n            });\r\n\t\t});\r\n};\r\n\r\n","import axios from 'axios';\r\nconst URL_API = process.env.REACT_APP_URL_API; \r\n\r\nexport const getAsistenciasFetch = () => (\r\n\taxios.get(URL_API + '/api/asistencia/getAll')\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\n\r\n\r\n\r\n","import moment from 'moment';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nexport const DataSetAsistencia = (listAsistencia) => {\r\n    const dataSet = [\r\n        {\r\n            columns: [\"Tienda\",\"Rut\",\"Nombre\",\"Apellido\", \"Día Entrada\", \"Hora Entrada\", \"Día Salida\" , \"Hora Salida\", \"Horas Trabajadas\"],\r\n            data: listAsistencia.map(asistencia => {\r\n                let fechaEntrada = moment(asistencia.fecha_entrada).format('DD/MM/YYYY');\r\n                let horaEntrada = moment(asistencia.fecha_entrada).format('HH:mm');\r\n\r\n                let fechaSalida = \" - \";\r\n                let horaSalida = \" - \";\r\n                let diferenciaHoras = \" - \";\r\n\r\n                if(asistencia.fecha_salida != null && asistencia.fecha_salida != undefined){\r\n                    fechaSalida = moment(asistencia.fecha_salida).format('DD/MM/YYYY');\r\n                    horaSalida = moment(asistencia.fecha_salida).format('HH:mm');\r\n\r\n                    diferenciaHoras = moment(asistencia.fecha_salida).diff(moment(asistencia.fecha_entrada), \"hours\");\r\n                }\r\n                \r\n                return [\r\n                    { value: asistencia.tienda.nombre, style: { font: { sz: \"14\" }}},\r\n                    { value: asistencia.usuario.rut, style: { font: { sz: \"14\" }}},\r\n                    { value: asistencia.usuario.nombre, style: { font: { sz: \"14\" }}},\r\n                    { value: asistencia.usuario.apellido, style: { font: { sz: \"14\" }}},\r\n                    { value: fechaEntrada, style: { font: { sz: \"14\" }}},\r\n                    { value: horaEntrada, style: { font: { sz: \"14\" }}},\r\n                    { value: fechaSalida, style: { font: { sz: \"14\" }}},\r\n                    { value: horaSalida, style: { font: { sz: \"14\" }}},\r\n                    { value: diferenciaHoras+\"\", style: { font: { sz: \"14\" }}}\r\n                ]\r\n            })\r\n        }\r\n    ];\r\n    \r\n    return dataSet;\r\n};","import React, {useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Listar from '../components/asistencia/Listar'\r\n\r\nimport { getAll } from '../actions/asistencia';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nimport { DataSetAsistencia } from '../Utils/dataSetAsistencia';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nconst HomePage = ({users, asistencias, getAll}) => {\r\n    const history = useHistory();\r\n    const [fechaBusqueda, setFechaBusqueda] = useState({});\r\n\r\n    const titulo = \"Trabajadores En El Local\";\r\n\r\n    let listAsistencias = asistencias.getAsistencias.filter(asistencia => {\r\n        if(asistencia.fecha_salida === null || asistencia.fecha_salida === undefined){\r\n            return asistencia;\r\n        }\r\n    });\r\n   \r\n    useEffect(() => {\r\n        if(users.payload.nombre.length === 0){\r\n            history.push(\"/login\");\r\n        }else{\r\n            buscarInformacion();\r\n        }\r\n\t}, []);\r\n\r\n    const buscarInformacion = async() => {\r\n        await getAll();\r\n\r\n        setFechaBusqueda(moment());\r\n    }\r\n\r\n    let loading = (<div></div>)\r\n    if(users.loading){\r\n        loading = (\r\n            <div className=\"text-center col-12 my-5\">\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#3f51b5\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={30000} //3 secs\r\n                />\r\n            </div>\r\n        )\r\n\t}\r\n\r\n    const elementExport = (\r\n        <Button \r\n            variant=\"primary\" \r\n        >\r\n            Exportar Datos a Excel\r\n        </Button>\r\n    );\r\n\r\n    const dataSet = DataSetAsistencia(listAsistencias);\r\n\r\n    return(\r\n        <Container className=\"justify-content-md-center postContainer\">\r\n            <h2 className='text-center' > { titulo } </h2>\r\n            <hr />\r\n            <div className=\"row\">\r\n\r\n                { loading }\r\n\r\n                <div className=\"col-12\">\r\n                    <h5 className=\"mt-3 mb-2\"> Datos cargados a las <Moment format=\"HH:mm:ss\"  date={fechaBusqueda} /> </h5>\r\n                    <div className=\"col-12 rounded border \">\r\n                        <Listar className=\"p-3 mt-5\" asistencias={listAsistencias} />\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                        <Button \r\n                            variant=\"primary\" \r\n                            className=\"mr-4\"\r\n                            onClick={() => buscarInformacion() }\r\n                        >\r\n                            Actualizar Datos\r\n                        </Button>\r\n\r\n                        {listAsistencias.length !== 0 ? (\r\n                            <ExcelFile element={<button className=\"btn btn-primary\"> Exportar Datos a Excel </button>} filename={titulo} >\r\n                                <ExcelSheet dataSet={dataSet} name=\"Control Asistencia\" />\r\n                            </ExcelFile>\r\n                        ): null}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({users, asistencias}) => ({users, asistencias});\r\n\r\nexport default connect(mapStateProps, {getAll})(HomePage);","import React, {useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Listar from '../components/asistencia/Listar'\r\n\r\nimport { getAll } from '../actions/asistencia';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nimport { DataSetAsistencia } from '../Utils/dataSetAsistencia';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nconst HistoricoPage = ({users, asistencias, getAll}) => {\r\n    const history = useHistory();\r\n    const [fechaBusqueda, setFechaBusqueda] = useState({});\r\n    const [inicio, setInicio] = useState(moment().subtract(1, 'months'));\r\n    const [termino, setTermino] = useState(moment());\r\n\r\n    const titulo = \"Historico de Asistencias\";\r\n\r\n    let listAsistencias = asistencias.getAsistencias.filter(asistencia => {\r\n        let fechaEntrada = moment(asistencia.fecha_entrada);\r\n\r\n        if(fechaEntrada >= inicio && fechaEntrada <= termino){\r\n            return asistencia;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(users.payload.nombre.length === 0){\r\n            history.push(\"/login\");\r\n        }else{\r\n            buscarInformacion();\r\n        }\r\n\t}, []);\r\n\r\n    const buscarInformacion = async() => {\r\n        await getAll();\r\n\r\n        setFechaBusqueda(moment());\r\n    }\r\n\r\n    let loading = (<div></div>)\r\n    if(users.loading){\r\n        loading = (\r\n            <div className=\"text-center col-12 my-5\">\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#3f51b5\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={30000} //3 secs\r\n                />\r\n            </div>\r\n        )\r\n\t}\r\n\r\n    const elementExport = (\r\n        <Button \r\n            variant=\"primary\" \r\n        >\r\n            Exportar Datos a Excel\r\n        </Button>\r\n    );\r\n\r\n    const dataSet = DataSetAsistencia(listAsistencias);\r\n\r\n    return(\r\n        <Container className=\"justify-content-md-center postContainer\">\r\n            <h2 className='text-center' > { titulo } </h2>\r\n            <hr />\r\n\r\n\r\n\r\n            <div className=\" d-flex rounded border py-2 col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2\">\r\n\t\t\t\t<Col className='d-flex border-right pt-2'>\r\n\t\t\t\t\t<label className='labelHistorico'> Inicio </label>\r\n                    <DatePicker selected={inicio.toDate()} onChange={date => setInicio(moment(date))} dateFormat='dd/MM/yyyy' name='inicio' className='form-control historyInput' />\r\n\t\t\t    </Col>\r\n\r\n                <Col className='d-flex  pt-2'>\r\n\t\t\t\t\t<label className='labelHistorico'> Termino </label>\r\n                    <DatePicker selected={termino.toDate()} onChange={date => setTermino(moment(date))} dateFormat='dd/MM/yyyy' name='termino' className='form-control historyInput' />\r\n\t\t\t    </Col>\r\n\t\t\t</div>\r\n            \r\n            <div className=\"row\">\r\n\r\n                { loading }\r\n\r\n                <div className=\"col-12\">\r\n                    <h5 className=\"mt-3 mb-2\"> Datos cargados a las <Moment format=\"HH:mm:ss\"  date={fechaBusqueda} /> </h5>\r\n                    <div className=\"col-12 rounded border \">\r\n                        <Listar className=\"p-3 mt-5\" asistencias={listAsistencias} />\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                        <Button \r\n                            variant=\"primary\" \r\n                            className=\"mr-4\"\r\n                            onClick={() => buscarInformacion() }\r\n                        >\r\n                            Actualizar Datos\r\n                        </Button>\r\n\r\n                        {listAsistencias.length !== 0 ? (\r\n                            <ExcelFile element={<button className=\"btn btn-primary\"> Exportar Datos a Excel </button>} filename={titulo} >\r\n                                <ExcelSheet dataSet={dataSet} name=\"Control Asistencia\" />\r\n                            </ExcelFile>\r\n                        ): null}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({users, asistencias}) => ({users, asistencias});\r\n\r\nexport default connect(mapStateProps, {getAll})(HistoricoPage);","import axios from 'axios';\r\n\r\nconst URL_API = process.env.REACT_APP_URL_API; \r\n\r\nexport const getUsersFetch = () => (\r\n\taxios.get(URL_API + '/api/user')\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const saveNewUser = (user) => (\r\n\taxios.post(URL_API + '/api/user', user, {})\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const updateUser = (user, id) => (\r\n\taxios.put(URL_API + '/api/user/'+id , user, {})\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const deleteUserById = (userId) => (\r\n\taxios.delete(URL_API + '/api/user/'+userId)\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const loginUser = (user) => (\r\n\taxios.post(URL_API + '/api/user/login', user, {})\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const bloquearUser = (id) => (\r\n\taxios.put(URL_API + '/api/user/bloquear/'+id , {}, {})\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const desbloquearUser = (id) => (\r\n\taxios.put(URL_API + '/api/user/desbloquear/'+id , {}, {})\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\n","export const messageError = (initial) => {\r\n    const data = initial.error.response.data;\r\n    let message = \"\";\r\n\r\n    if(data.errors){\r\n        if(data.errors.length > 0){\r\n            if(data.errors[0].msg){\r\n                message = data.errors[0].msg;\r\n            }\r\n        }\r\n    }else if(data.msg){\r\n        message = data.msg;\r\n    }\r\n\r\n    return message;\r\n};","import { CLEAR_MESSAGE, SET_MESSAGE} from './types';\r\n\r\nexport const clearMessage = () => ({\r\n\ttype: CLEAR_MESSAGE\r\n});\r\n\r\nexport const setMessage = (message) => dispatch => {\r\n\tdispatch({\r\n\t\ttype: SET_MESSAGE,\r\n        messages: {\r\n            title: message.title,\r\n            message: message.message,\r\n            status: message.status\r\n        }\r\n\t});\r\n};\r\n\r\n","import { DELETE_USER, SAVE_USER, GET_USERS , LOGIN_USER, USER_LOADING, USER_LOADING_OFF, LOGIN_USER_OUT, SET_PAYLOAD, UPDATE_USER, BLOQUEAR_USER, DESBLOQUEAR_USER } from './types';\r\nimport { getUsersFetch, saveNewUser, deleteUserById, loginUser, updateUser, bloquearUser, desbloquearUser } from '../services/user';\r\nimport { messageError } from '../Utils/getMessageError';\r\nimport { setMessage } from './messages';\r\n\r\nexport const remove = (userId) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\r\n\tdispatch(loadingIni());\r\n\tdeleteUserById(userId)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n\t\t\t\tsendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n\t\t\t\tsendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Usuario Eliminado Exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(removeSuccess(userId));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const save = (user) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\r\n\tdispatch(loadingIni());\r\n\tsaveNewUser(user)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n\t\t\t\tsendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n\t\t\t\tsendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Usuario \"+ user.nombre +\" creado Exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(createdSuccess(response.user));\r\n\t\t\t}\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const update = (user, id) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\r\n\tdispatch(loadingIni());\r\n\tupdateUser(user, id)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n\t\t\t\tsendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n\t\t\t\tsendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Usuario \"+ user.nombre +\" modificado Exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(updateSuccess(response.user));\r\n\t\t\t}\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const bloquear = (id) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\r\n\tdispatch(loadingIni());\r\n\tbloquearUser(id)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n\t\t\t\tsendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n\t\t\t\tsendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Usuario bloqueado Exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(bloquearSuccess(response.user));\r\n\t\t\t}\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const desbloquear = (id) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\r\n\tdispatch(loadingIni());\r\n\tdesbloquearUser(id)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n\t\t\t\tsendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n\t\t\t\tsendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Usuario Desbloqueado Exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(desbloquearSuccess(response.user));\r\n\t\t\t}\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const login = (userLogin) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\t\r\n\tdispatch(loadingIni());\r\n\tloginUser(userLogin)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n\t\t\t\tsendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n\t\t\t\tsendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Has iniciado Sesión Exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(loginSuccess(response));\r\n\t\t\t}\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const logOutUser = () => dispatch => {\r\n\tdispatch(loginOutUser());\r\n};\r\n\r\nexport const get = () => dispatch => {\r\n\tgetUsersFetch()\r\n\t\t.then(response => {\r\n\t\t\tdispatch({\r\n                type: GET_USERS,\r\n                users: response.users\r\n            });\r\n\t\t})\r\n\t\t.catch( () => {\r\n\t\t\tdispatch({\r\n                type: GET_USERS,\r\n                users: []\r\n            });\r\n\t\t});\r\n};\r\n\r\nexport const setPayload = (payload) => dispatch => {\r\n\tdispatch({\r\n\t\ttype: SET_PAYLOAD,\r\n\t\tpayload\r\n\t});\r\n};\r\n\r\nconst loadingIni = () => ({\r\n\ttype: USER_LOADING\r\n});\r\n\r\nconst loadingOff = () => ({\r\n\ttype: USER_LOADING_OFF\r\n});\r\n\r\nconst createdSuccess = newUser => ({\r\n\ttype: SAVE_USER,\r\n\tnewUser\r\n});\r\n\r\nconst updateSuccess = (user) => ({\r\n\ttype: UPDATE_USER,\r\n\tuser\r\n});\r\n\r\nconst bloquearSuccess = (user) => ({\r\n\ttype: BLOQUEAR_USER,\r\n\tuser\r\n});\r\n\r\nconst desbloquearSuccess = (user) => ({\r\n\ttype: DESBLOQUEAR_USER,\r\n\tuser\r\n});\r\n\r\nconst loginSuccess= (payload) => ({\r\n\ttype: LOGIN_USER,\r\n\tpayload\r\n});\r\n\r\nconst loginOutUser= () => ({\r\n\ttype: LOGIN_USER_OUT\r\n});\r\n\r\nconst removeSuccess = (id) => ({\r\n\ttype: DELETE_USER,\r\n\tid\r\n});\r\n","import { DELETE_USER_HUELLA, GET_USERS_HUELLAS , HUELLA_LOADING, HUELLA_LOADING_OFF } from './types';\r\nimport { getHuellasFetch, deleteHuella } from '../services/usuarioHuella';\r\nimport { messageError } from '../Utils/getMessageError';\r\nimport { setMessage } from './messages';\r\n\r\nexport const removeHuella = (id) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\r\n\tdispatch(loadingIni());\r\n\tdeleteHuella(id)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n\t\t\t\tsendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n\t\t\t\tsendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Huella Eliminada Exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(removeSuccess(id));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\t dispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const getHuellas = () => dispatch => {\r\n\tgetHuellasFetch()\r\n\t\t.then(response => {\r\n\t\t\tdispatch({\r\n                type: GET_USERS_HUELLAS,\r\n                huellas: response.huellas\r\n            });\r\n\t\t})\r\n\t\t.catch( () => {\r\n\t\t\tdispatch({\r\n                type: GET_USERS_HUELLAS,\r\n                huellas: []\r\n            });\r\n\t\t});\r\n};\r\n\r\nconst loadingIni = () => ({\r\n\ttype: HUELLA_LOADING\r\n});\r\n\r\nconst loadingOff = () => ({\r\n\ttype: HUELLA_LOADING_OFF\r\n});\r\n\r\nconst removeSuccess = (id) => ({\r\n\ttype: DELETE_USER_HUELLA,\r\n\tid\r\n});\r\n","import axios from 'axios';\r\nconst URL_API = process.env.REACT_APP_URL_API; \r\n\r\nexport const getTiendasFetch = () => (\r\n\taxios.get(URL_API + '/api/tienda')\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const saveNewTienda = (tienda) => (\r\n\taxios.post(URL_API + '/api/tienda', tienda, {})\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const updateTienda = (tienda, id) => (\r\n\taxios.put(URL_API + '/api/tienda/'+id , tienda, {})\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\nexport const deleteTiendaById = (id) => (\r\n\taxios.delete(URL_API + '/api/tienda/'+id)\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\n\r\n\r\n\r\n","import { DELETE_TIENDA, SAVE_TIENDA, GET_TIENDAS , TIENDA_LOADING, TIENDA_LOADING_OFF, UPDATE_TIENDA } from './types';\r\nimport { getTiendasFetch, saveNewTienda, deleteTiendaById, updateTienda } from '../services/tienda';\r\nimport { setMessage } from './messages';\r\nimport { messageError } from '../Utils/getMessageError';\r\n\r\nexport const remove = (id) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\r\n\tdispatch(loadingIni());\r\n\tdeleteTiendaById(id)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n                sendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n                sendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Tienda Eliminada Exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\r\n\t\t\t\tdispatch(removeSuccess(id));\r\n\t\t\t}\r\n\r\n            dispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n            dispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const save = (tienda) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\r\n\tdispatch(loadingIni());\r\n\tsaveNewTienda(tienda)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n                sendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n                sendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Tienda \"+ tienda.nombre +\" creada exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(createdSuccess(response.tienda));\r\n\t\t\t}\r\n\r\n            dispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const update = (tienda, id) => dispatch => {\r\n\tlet sendMessage = {\r\n\t\ttitle: 'Error!',\r\n\t\tmessage: 'Error interno!',\r\n\t\tstatus: 'error'\r\n\t}\r\n\t\r\n\tdispatch(loadingIni());\r\n\tupdateTienda(tienda, id)\r\n\t\t.then(response => {\r\n\t\t\tif(response.error){\r\n\t\t\t\tsendMessage.message = messageError(response);\r\n\t\t\t}else{\r\n                sendMessage.title = \"Exito!\";\r\n                sendMessage.message = \"Tienda modificada exitosamente!\";\r\n                sendMessage.status = \"success\";\r\n\t\t\t\tdispatch(updateSuccess(response.tienda));\r\n\t\t\t}\r\n\r\n            dispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tdispatch(setMessage(sendMessage));\r\n\t\t\tdispatch(loadingOff());\r\n\t\t});\r\n};\r\n\r\nexport const get = () => dispatch => {\r\n\tgetTiendasFetch()\r\n\t\t.then(response => {\r\n\t\t\tdispatch({\r\n                type: GET_TIENDAS,\r\n                tiendas: response.tiendas\r\n            });\r\n\t\t})\r\n\t\t.catch( () => {\r\n\t\t\tdispatch({\r\n                type: GET_TIENDAS,\r\n                tiendas: []\r\n            });\r\n\t\t});\r\n};\r\n\r\nconst loadingIni = () => ({\r\n\ttype: TIENDA_LOADING\r\n});\r\n\r\nconst loadingOff = () => ({\r\n\ttype: TIENDA_LOADING_OFF\r\n});\r\n\r\nconst createdSuccess = tienda => ({\r\n\ttype: SAVE_TIENDA,\r\n\ttienda\r\n});\r\n\r\nconst updateSuccess = (tienda) => ({\r\n\ttype: UPDATE_TIENDA,\r\n\ttienda\r\n});\r\n\r\nconst removeSuccess = (id) => ({\r\n\ttype: DELETE_TIENDA,\r\n\tid\r\n});\r\n","import React, {useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { login } from '../actions';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nconst LoginPage = ({users, login, clearMessage}) => {\r\n    const history = useHistory();\r\n   \r\n    if(users.payload.nombre.length > 0){\r\n        localStorage.setItem('payload', JSON.stringify(users.payload));\r\n        history.push(\"/home\");\r\n    }\r\n    const [rut, setRut] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n\tconst addPost = async() => {\r\n        if(rut.length > 0 && password.length > 0){\r\n            users.payload.rut = rut;\r\n            users.payload.password = password;\r\n    \r\n            login(users.payload);\r\n        }else{\r\n            swal(\"Ups!\", \"Debe completar todos los datos para poder iniciar sesión\", \"warning\")\r\n        }\r\n\t}\r\n\r\n    const setInputPassword = (value) => {\r\n        setPassword(value);\r\n    }\r\n\r\n    const setInputRut = (value) => {\r\n        setRut(value);\r\n    }\r\n\r\n    let loading = (<div></div>)\r\n\r\n    if(users.loading){\r\n        loading = (\r\n            <div className=\"text-center my-5\">\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#3f51b5\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={30000} //3 secs\r\n                />\r\n            </div>\r\n        )\r\n\t}\r\n\r\n    return(\r\n        <Container className=\"justify-content-md-center\">\r\n            <h2 className='text-center' > Inicie Sesión para poder navegar </h2>\r\n            <hr />\r\n            {loading}\r\n            \r\n            <div className=\"col-12 col-md-8 col-lg-6 mx-auto rounded border p-5 mt-5\">\r\n                <Form className=\"\">\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Rut</Form.Label>\r\n                        <input \r\n                            name='name' \r\n                            type='text' \r\n                            className='form-control' \r\n                            placeholder='ej: 18123456-9' \r\n                            value={rut}\r\n                            onChange={e => setInputRut(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formBasicDescription\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <input \r\n                            name='password' \r\n                            type='password' \r\n                            className='form-control' \r\n                            placeholder='******' \r\n                            value={password}\r\n                            onChange={e => setInputPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button \r\n                        variant=\"primary\" \r\n                        onClick={() => addPost() }\r\n                    >\r\n                        Iniciar Sesión\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nLoginPage.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateProps = ({users}) => ({users});\r\n\r\nexport default connect(mapStateProps, {login})(LoginPage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst NotFoundPage = props => {\r\n    return(\r\n        <Container className=\"justify-content-md-center postContainer\">\r\n            <div>\r\n              <Link to='/'> Ir a Home </Link>\r\n            </div>\r\n            <h2 className='text-center' > Pagina no encontrada </h2>\r\n        </Container>\r\n    )\r\n}\r\n\r\nNotFoundPage.propTypes = {\r\n\r\n}\r\n\r\nexport default NotFoundPage;","import React, {  useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport { save, update} from '../../actions';\r\n\r\nconst Create = ({save, userUpdate, update}) => {\r\n    \r\n    let [id, setId] = useState(0);\r\n    let [rut, setRut] = useState('');\r\n    let [nombre, setNombre] = useState('');\r\n    let [apellido, setApellido] = useState('');\r\n    \r\n    if(userUpdate.id && userUpdate.id !== id){\r\n        setId(userUpdate.id);\r\n        setRut(userUpdate.rut);\r\n        setNombre(userUpdate.nombre);\r\n        setApellido(userUpdate.apellido);\r\n    }\r\n\r\n    const createUser = async() => {\r\n        if(rut && nombre && apellido){\r\n            if(rut.length > 0 && nombre.length > 0 && apellido.length > 0){\r\n                let newUser = {rut, nombre, apellido, rol: 2};\r\n                await save(newUser);\r\n            }else{\r\n                swal(\"Ups!\", \"Rut, Nombre y Apellido son obligatorios\", \"warning\")\r\n            }\r\n        }else{\r\n            swal(\"Ups!\", \"Rut, Nombre y Apellido son obligatorios\", \"warning\")\r\n        }\r\n\t}\r\n\r\n    const modificarUser = async() => {\r\n        if(id && id > 0){\r\n            if(rut && nombre && apellido){\r\n                if(rut.length > 0 && nombre.length > 0 && apellido.length > 0){\r\n                    let userUpdate = {rut, nombre, apellido, rol: 2};\r\n                    await update(userUpdate, id);\r\n                }else{\r\n                    swal(\"Ups!\", \"Rut, Nombre y Apellido son obligatorios\", \"warning\")\r\n                }\r\n            }else{\r\n                swal(\"Ups!\", \"Rut, Nombre y Apellido son obligatorios\", \"warning\")\r\n            }\r\n        }else{\r\n            swal(\"Ups!\", \"Este usuario no puede ser modificado\", \"warning\")\r\n        }\r\n       \r\n\t}\r\n \r\n    let buttons = (\r\n        <Button \r\n            variant=\"primary\" \r\n            onClick={() => createUser() }\r\n        >\r\n            Crear Usuario\r\n        </Button>\r\n    );\r\n\r\n    if(id && id > 0){\r\n        buttons = (\r\n            <Button \r\n                variant=\"primary\" \r\n                onClick={() => modificarUser() }\r\n            >\r\n                Modificar Usuario\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-12 rounded border p-3 mt-5\">\r\n            <h4 className=\"mt-1 mb-3 text-center\">Datos Usuario</h4>\r\n            <Form className=\"\">\r\n                <Form.Group controlId=\"formBasicRut\">\r\n                    <Form.Label>*Rut</Form.Label>\r\n                    <input \r\n                        name='name' \r\n                        type='text' \r\n                        className='form-control' \r\n                        placeholder='ej: 18123456-9' \r\n                        value={rut}\r\n                        onChange={e => setRut(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId=\"formBasicNombre\">\r\n                    <Form.Label>*Nombre</Form.Label>\r\n                    <input \r\n                        name='nombre' \r\n                        type='text' \r\n                        className='form-control' \r\n                        value={nombre}\r\n                        onChange={e => setNombre(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicApellido\">\r\n                    <Form.Label>*Apellido</Form.Label>\r\n                    <input \r\n                        name='apellido' \r\n                        type='text' \r\n                        className='form-control' \r\n                        value={apellido}\r\n                        onChange={e => setApellido(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                { buttons }\r\n                \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({}) => ({});\r\n\r\nexport default connect(mapStateProps, {save, update})(Create);","import React, {useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from '../../Utils/pagination';\r\nimport { get, remove, bloquear, desbloquear } from '../../actions';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { BiTrash } from 'react-icons/bi';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { BiLock } from \"react-icons/bi\";\r\nimport { BiLockOpen } from \"react-icons/bi\";\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Listar = ({users, get, remove, updateUser, bloquear, desbloquear}) => {\r\n    useEffect(() => {\r\n        get();\r\n\t}, [])\r\n\r\n    const [rutFilter, setRutFilter] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\tconst [userPerPage] = useState(8);\r\n\r\n    const filterUsers = users.getUsers.filter(user => {\r\n        if(user.rut){\r\n            if(user.rut.includes(rutFilter) && user.rol === 2){\r\n                return user\r\n            }\r\n        }\r\n    });\r\n\r\n\tconst indexOfLastUser = currentPage * userPerPage;\r\n\tconst indexOfFirstUser = indexOfLastUser - userPerPage;\r\n\tconst currentUsers = filterUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n\tconst paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\tconst confirmarEliminar = (id) => {\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Estas Seguro?',\r\n\t\t\ttext: \"Si Borras a este usuario se perderán todos sus datos y registros de asistencia!\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\tcancelButtonColor: '#d33',\r\n\t\t\tconfirmButtonText: 'Si, Borralo!'\r\n\t\t  }).then((result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tremove(id);\r\n\t\t\t}\r\n\t\t  })\r\n\t}\r\n\r\n\tconst confirmarBloquear = (id) => {\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Estas Seguro?',\r\n\t\t\ttext: \"Si Bloqueas a este usuario no podra tomar asistencia hasta su desbloqueo!\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\tcancelButtonColor: '#d33',\r\n\t\t\tconfirmButtonText: 'Si, Bloquealo!'\r\n\t\t  }).then((result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tbloquear(id);\r\n\t\t\t}\r\n\t\t  })\r\n\t}\r\n\r\n\tconst confirmarDesBloquear = (id) => {\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Estas Seguro?',\r\n\t\t\ttext: \"Si Desbloqueas a este usuario podra tomar asistencia!\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\tcancelButtonColor: '#d33',\r\n\t\t\tconfirmButtonText: 'Si, Desbloquealo!'\r\n\t\t  }).then((result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tdesbloquear(id);\r\n\t\t\t}\r\n\t\t  })\r\n\t}\r\n\r\n    return(\r\n        <div>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className='d-flex'>\r\n\t\t\t\t\t<label className='labelSearch'> Filtrar</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tname='search' \r\n\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\tclassName='form-control searchInput' \r\n\t\t\t\t\t\tplaceholder='Ingrese Rut ' \r\n\t\t\t\t\t\tonChange={e => setRutFilter(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t    </Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Table striped bordered hover className='mb-0'>\r\n\t\t\t    <thead>\r\n\t\t\t    \t<tr>\r\n\t\t\t\t        <th> Rut </th>\r\n\t\t\t\t        <th> Nombre </th>\r\n\t\t\t\t        <th> Apellido </th>\r\n\t\t\t\t\t\t<th> Bloqueado </th>\r\n\t\t\t\t        <th> Acción </th>\r\n\t\t\t        </tr>\r\n\t\t\t    </thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcurrentUsers.map((user, i) => {\r\n\t\t\t\t\t\t\tlet botonBloqueo = (\r\n\t\t\t\t\t\t\t\t<BiLock className='iconData super-delete scale mx-3' onClick={() => confirmarBloquear(user.id)} /> \r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\tif(user.bloqueado === 1){\r\n\t\t\t\t\t\t\t\tbotonBloqueo = (\r\n\t\t\t\t\t\t\t\t\t<BiLockOpen className='iconData success scale mx-3' onClick={() => confirmarDesBloquear(user.id)} /> \r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t\t<td> {user.rut} </td>\r\n\t\t\t\t\t\t\t\t\t<td> {user.nombre} </td>\r\n\t\t\t\t\t\t\t\t\t<td> {user.apellido} </td>\r\n\t\t\t\t\t\t\t\t\t<td> { (user.bloqueado === 0) ? \"NO\" : \"SI\" } </td>\r\n\t\t\t\t\t\t\t\t\t<td> \r\n\t\t\t\t\t\t\t\t\t\t<div className='d-flex'>\r\n\t\t\t\t\t\t\t\t\t\t\t{ botonBloqueo }\r\n\t\t\t\t\t\t\t\t\t\t\t<BiTrash className='iconData delete scale mr-3' onClick={() => confirmarEliminar(user.id)} /> \r\n\t\t\t\t\t\t\t\t\t\t\t<EditIcon className='iconData primary scale' onClick={() => updateUser(user)}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className='d-flex'>\r\n\t\t\t\t\t<Pagination dataPerPage={userPerPage} totalData={filterUsers.length} paginate={paginate} />\r\n\t\t\t    </Col>\r\n\t\t\t\t<Col xs={5} className='text-right'>\r\n\t\t\t\t\t<p className='mb-0 mt-1 mr-2'> Mostrando {currentUsers.length} de {filterUsers.length} Usuarios </p>\r\n\t\t\t    </Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({users}) => ({users});\r\n\r\nexport default connect(mapStateProps, {get, remove, bloquear, desbloquear})(Listar);","import React, {useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport Create from '../components/user/create';\r\nimport Listar from '../components/user/listar';\r\n\r\nconst Usuarios = ({users}) => {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(users.payload.nombre.length === 0){\r\n            history.push(\"/login\");\r\n        }\r\n\t}, [])\r\n\r\n    let loading = (<div></div>)\r\n    if(users.loading){\r\n        loading = (\r\n            <div className=\"text-center col-12 my-5\">\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#3f51b5\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={30000} //3 secs\r\n                />\r\n            </div>\r\n        )\r\n\t}\r\n\r\n    const [userUpdate, setUserUpdate] = useState({});\r\n\r\n    return(\r\n        <Container className=\"justify-content-md-center\">\r\n            <h2 className='text-center' > Usuarios </h2>\r\n            <hr />\r\n            <div className=\"row\">\r\n\r\n                { loading }\r\n\r\n                <div className=\"col-12 col-lg-4\">\r\n                    <Create userUpdate={userUpdate} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"col-12 rounded border p-3 mt-5\">\r\n                        <Listar updateUser={setUserUpdate} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({users}) => ({users});\r\n\r\nexport default connect(mapStateProps, {})(Usuarios);","import React, {  useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport { save, update} from '../../actions/tienda';\r\n\r\nconst Create = ({save, tiendaUpdate, update}) => {\r\n    \r\n    let [id, setId] = useState(0);\r\n    let [nombre, setNombre] = useState('');\r\n    \r\n    if(tiendaUpdate.id && tiendaUpdate.id !== id){\r\n        setId(tiendaUpdate.id);\r\n        setNombre(tiendaUpdate.nombre);\r\n    }\r\n\r\n    const createTienda = async() => {\r\n        if(nombre){\r\n            if(nombre.length > 0 ){\r\n                let tienda = { nombre };\r\n                await save(tienda);\r\n            }else{\r\n                swal(\"Ups!\", \"Nombre es obligatorio\", \"warning\")\r\n            }\r\n        }else{\r\n            swal(\"Ups!\", \"Nombre es obligatorio\", \"warning\")\r\n        }\r\n\t}\r\n\r\n    const modificarTienda = async() => {\r\n        if(id && id > 0){\r\n            if(nombre){\r\n                if( nombre.length > 0 ){\r\n                    let tienda = { nombre };\r\n                    await update(tienda, id);\r\n                }else{\r\n                    swal(\"Ups!\", \"Nombre es obligatorio\", \"warning\")\r\n                }\r\n            }else{\r\n                swal(\"Ups!\", \"Nombre es obligatorio\", \"warning\")\r\n            }\r\n        }else{\r\n            swal(\"Ups!\", \"Esta tienda no puede ser modificada\", \"warning\")\r\n        }\r\n       \r\n\t}\r\n \r\n    let buttons = (\r\n        <Button \r\n            variant=\"primary\" \r\n            onClick={() => createTienda() }\r\n        >\r\n            Crear Tienda\r\n        </Button>\r\n    );\r\n\r\n    if(id && id > 0){\r\n        buttons = (\r\n            <Button \r\n                variant=\"primary\" \r\n                onClick={() => modificarTienda() }\r\n            >\r\n                Modificar Tienda\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-12 rounded border p-3 mt-5\">\r\n            <h4 className=\"mt-1 mb-3 text-center\">Datos de Tienda</h4>\r\n            <Form className=\"\">\r\n\r\n                <Form.Group controlId=\"formBasicNombre\">\r\n                    <Form.Label>*Nombre</Form.Label>\r\n                    <input \r\n                        name='nombre' \r\n                        type='text' \r\n                        className='form-control' \r\n                        value={nombre}\r\n                        onChange={e => setNombre(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                { buttons }\r\n                \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({}) => ({});\r\n\r\nexport default connect(mapStateProps, {save, update})(Create);","import React, {useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from '../../Utils/pagination';\r\nimport { get, remove } from '../../actions/tienda';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { BiTrash } from 'react-icons/bi';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Listar = ({tiendas, get, remove, updateTienda}) => {\r\n    useEffect(() => {\r\n        get();\r\n\t}, [])\r\n\r\n    const [dataFilter, setDataFilter] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\tconst [dataPerPage] = useState(8);\r\n\r\n    const filterTiendas = tiendas.getTiendas.filter(tienda => {\r\n        if(tienda.nombre){\r\n            if(tienda.nombre.includes(dataFilter)){\r\n                return tienda\r\n            }\r\n        }\r\n    });\r\n\r\n\tconst indexOfLastUser = currentPage * dataPerPage;\r\n\tconst indexOfFirstUser = indexOfLastUser - dataPerPage;\r\n\tconst currentData = filterTiendas.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n\tconst paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\tconst confirmarEliminar = (id) => {\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Estas Seguro?',\r\n\t\t\ttext: \"Si Borras esta Tienda se perderán todos sus datos y registros de asistencia!\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\tcancelButtonColor: '#d33',\r\n\t\t\tconfirmButtonText: 'Si, Borrala!'\r\n\t\t  }).then((result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tremove(id);\r\n\t\t\t}\r\n\t\t  })\r\n\t}\r\n\r\n    return(\r\n        <div>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className='d-flex'>\r\n\t\t\t\t\t<label className='labelSearch'> Filtrar</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tname='search' \r\n\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\tclassName='form-control searchInput' \r\n\t\t\t\t\t\tplaceholder='Ingrese Nombre ' \r\n\t\t\t\t\t\tonChange={e => setDataFilter(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t    </Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Table striped bordered hover className='mb-0'>\r\n\t\t\t    <thead>\r\n\t\t\t    \t<tr>\r\n\t\t\t\t        <th> ID </th>\r\n\t\t\t\t        <th> Nombre </th>\r\n\t\t\t\t        <th> Acción </th>\r\n\t\t\t        </tr>\r\n\t\t\t    </thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcurrentData.map((tienda, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t<td> {tienda.id} </td>\r\n\t\t\t\t\t\t\t\t<td> {tienda.nombre} </td>\r\n\t\t\t\t\t\t\t\t<td> \r\n                                    <div className='d-flex'>\r\n                                        <BiTrash className='iconData delete scale mr-3' onClick={() => confirmarEliminar(tienda.id)} /> \r\n                                        <EditIcon className='iconData primary scale' onClick={() => updateTienda(tienda)}/>\r\n                                    </div>\r\n                                </td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className='d-flex'>\r\n\t\t\t\t\t<Pagination dataPerPage={dataPerPage} totalData={filterTiendas.length} paginate={paginate} />\r\n\t\t\t    </Col>\r\n\t\t\t\t<Col xs={5} className='text-right'>\r\n\t\t\t\t\t<p className='mb-0 mt-1 mr-2'> Mostrando {currentData.length} de {filterTiendas.length} Tiendas </p>\r\n\t\t\t    </Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({tiendas}) => ({tiendas});\r\n\r\nexport default connect(mapStateProps, {get, remove})(Listar);","import React, {useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport Create from '../components/tienda/create';\r\nimport Listar from '../components/tienda/listar';\r\n\r\nconst Tiendas = ({tiendas, users}) => {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(users.payload.nombre.length === 0){\r\n            history.push(\"/login\");\r\n        }\r\n\t}, [])\r\n\r\n    let loading = (<div></div>)\r\n    if(tiendas.loading){\r\n        loading = (\r\n            <div className=\"text-center col-12 my-5\">\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#3f51b5\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={30000} //3 secs\r\n                />\r\n            </div>\r\n        )\r\n\t}\r\n\r\n    const [tiendaUpdate, setUpdateTienda] = useState({});\r\n\r\n    return(\r\n        <Container className=\"justify-content-md-center\">\r\n            <h2 className='text-center' > Tiendas </h2>\r\n            <hr />\r\n            <div className=\"row\">\r\n\r\n                { loading }\r\n\r\n                <div className=\"col-12 col-lg-4\">\r\n                    <Create tiendaUpdate={tiendaUpdate} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"col-12 rounded border p-3 mt-5\">\r\n                        <Listar updateTienda={setUpdateTienda} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({tiendas, users}) => ({tiendas, users});\r\n\r\nexport default connect(mapStateProps, {})(Tiendas);","import React, {useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from '../Utils/pagination';\r\nimport { get, getHuellas, removeHuella } from '../actions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { BiTrash } from 'react-icons/bi';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst UsuariosEnrrolados = ({ users, userHuella, getHuellas, removeHuella, get}) => {\r\n    useEffect(() => {\r\n        getHuellas();\r\n        get();\r\n\t}, [])\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(users.payload.nombre.length === 0){\r\n            history.push(\"/login\");\r\n        }\r\n\t}, [])\r\n\r\n    let loading = (<div></div>)\r\n    if(userHuella.loading){\r\n        loading = (\r\n            <div className=\"text-center col-12 my-5\">\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#3f51b5\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={30000} //3 secs\r\n                />\r\n            </div>\r\n        )\r\n\t}\r\n\r\n    let nroSinHuellas = 0;\r\n    const [rutFilter, setRutFilter] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\tconst [userPerPage] = useState(8);\r\n\r\n    const listUsuariosHuella = users.getUsers.map(user => {\r\n        let userMap = { id: user.id, rut: user.rut, nombre: user.nombre, apellido: user.apellido, rol: user.rol, huella: 'No', id_huella: 0 };\r\n\r\n        let existeHuella = userHuella.getHuellas.find(userHuella => userHuella.id_usuario === user.id);\r\n        if(existeHuella){\r\n            userMap.huella = 'Si';\r\n            userMap.id_huella = existeHuella.id;\r\n        }else if(user.rol === 2){\r\n            nroSinHuellas++;\r\n        }\r\n\r\n        return userMap;\r\n    });\r\n\r\n    const filterUsersHuellas = listUsuariosHuella.filter(user => {\r\n        if(user.rut){\r\n            if(user.rut.includes(rutFilter) && user.rol === 2){\r\n                return user\r\n            }\r\n        }\r\n    });\r\n\r\n\tconst indexOfLastUser = currentPage * userPerPage;\r\n\tconst indexOfFirstUser = indexOfLastUser - userPerPage;\r\n\tconst currentUsersHuella = filterUsersHuellas.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n\tconst paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    const botonBoorarHuella = (id_huella) => {\r\n        if(id_huella > 0){\r\n            return (\r\n                <div className='d-flex'>\r\n                    <BiTrash className='iconData delete scale mr-3' onClick={() => confirmarEliminar(id_huella)} /> \r\n                </div>\r\n            );\r\n        }\r\n        return(<div></div>);\r\n    }\r\n\r\n    const confirmarEliminar = (id) => {\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Estas Seguro?',\r\n\t\t\ttext: \"Si Borras esta Huella el trabajador no podra marcar asistencia hasta que registre una nueva!\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\tcancelButtonColor: '#d33',\r\n\t\t\tconfirmButtonText: 'Si, Borrala!'\r\n\t\t  }).then((result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tremoveHuella(id);\r\n\t\t\t}\r\n\t\t  })\r\n\t}\r\n\r\n    return(\r\n        <Container className=\"justify-content-md-center\">\r\n            <h2 className='text-center' > Usuarios Enrrolados </h2>\r\n            <hr />\r\n            <div className=\"row\">\r\n\r\n                { loading }\r\n\r\n                <div className='col-12 mt-5'>\r\n\r\n                    <Row>\r\n                        <Col className='d-flex'>\r\n                            <p> <b> Existen {nroSinHuellas} Usuarios sin Huella! </b> </p>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col className='d-flex'>\r\n                            <label className='labelSearch'> Filtrar</label>\r\n                            <input \r\n                                name='search' \r\n                                type='text' \r\n                                className='form-control searchInput' \r\n                                placeholder='Ingrese Rut ' \r\n                                onChange={e => setRutFilter(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Table striped bordered hover className='mb-0'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th> Rut </th>\r\n                                <th> Nombre </th>\r\n                                <th> Apellido </th>\r\n                                <th> Posee Huella? </th>\r\n                                <th> Borrar Huella </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                currentUsersHuella.map((user, i) => (\r\n                                    <tr key={i}>\r\n                                        <td> {user.rut} </td>\r\n                                        <td> {user.nombre} </td>\r\n                                        <td> {user.apellido} </td>\r\n                                        <td> {user.huella} </td>\r\n                                        <td> \r\n                                            { botonBoorarHuella(user.id_huella) }\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <Row>\r\n                        <Col className='d-flex'>\r\n                            <Pagination dataPerPage={userPerPage} totalData={filterUsersHuellas.length} paginate={paginate} />\r\n                        </Col>\r\n                        <Col xs={5} className='text-right'>\r\n                            <p className='mb-0 mt-1 mr-2'> Mostrando {currentUsersHuella.length} de {filterUsersHuellas.length} Usuarios </p>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateProps = ({users, userHuella}) => ({users, userHuella});\r\n\r\nexport default connect(mapStateProps, {getHuellas, removeHuella, get})(UsuariosEnrrolados);","import axios from 'axios';\r\n\r\nconst URL_API = process.env.REACT_APP_URL_API; \r\n\r\nexport const getHuellasFetch = () => (\r\n\taxios.get(URL_API + '/api/huella')\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\n\r\nexport const deleteHuella = (id) => (\r\n\taxios.delete(URL_API + '/api/huella/'+id)\r\n\t\t.then(res => {\r\n\t\t\treturn res.data\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\treturn {error}\r\n\t\t})\r\n);\r\n\r\n\r\n\r\n","import React, {useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport { logOutUser, setPayload, clearMessage } from '../actions';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Menu = ({users ,clearMessage,  messages, logOutUser, setPayload}) => {\r\n    const history = useHistory();\r\n\r\n    const handleClick = (path) => {\r\n        history.push(path);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(users.payload.nombre.length === 0){\r\n            let localPayload = localStorage.getItem('payload');\r\n            if(localPayload){\r\n                if(JSON.parse(localPayload).nombre.length > 0){\r\n                    setPayload(JSON.parse(localPayload));\r\n                }\r\n            }\r\n        }\r\n\t}, [])\r\n\r\n    const removePayload = () => {\r\n        localStorage.removeItem('payload')\r\n        logOutUser();\r\n    }\r\n\r\n    function logOut() {\r\n        if(users.payload.nombre.length > 0){\r\n        \r\n            return (\r\n                <ListItem button activeClassName={classes.active} component={NavLink} to=\"/login\" key={99} onClick={() => {  removePayload();  handleClick(\"/login\");   } } >\r\n                    <ListItemIcon>  <ExitToAppIcon /> </ListItemIcon>\r\n                    <ListItemText primary=\"Salir\" />\r\n                </ListItem>\r\n            );\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className=\"backColor MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters\" >\r\n                    Menu\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n            \r\n                <ListItem activeClassName={classes.active} component={NavLink} to=\"/home\" button key={1} onClick={() => handleClick(\"/\")}>\r\n                    <ListItemIcon>  <WorkIcon /> </ListItemIcon>\r\n                    <ListItemText primary=\"Trabajando\" />\r\n                </ListItem>\r\n\r\n                <ListItem button activeClassName={classes.active} component={NavLink} to=\"/asistencia-historica\" key={9} onClick={() => handleClick(\"/asistencia-historica\")}>\r\n                    <ListItemIcon>  <WorkIcon /> </ListItemIcon>\r\n                    <ListItemText primary=\"Asistencia Historica\" />\r\n                </ListItem>\r\n                <br />\r\n                <Divider />\r\n                <br />\r\n                <ListItem button activeClassName={classes.active} component={NavLink} to=\"/usuarios\" onClick={() => handleClick(\"/usuarios\")} >\r\n                    <ListItemIcon>  <PeopleIcon /> </ListItemIcon>\r\n                    <ListItemText primary=\"Usuarios\" />\r\n                </ListItem>\r\n\r\n                <ListItem button activeClassName={classes.active} component={NavLink} to=\"/usuarios-enrrolados\" key={3} onClick={() => handleClick(\"/usuarios-enrrolados\")} >\r\n                    <ListItemIcon>  <AssignmentIndIcon /> </ListItemIcon>\r\n                    <ListItemText primary=\"Usuarios Enrrolados\" />\r\n                </ListItem>\r\n\r\n                <ListItem button activeClassName={classes.active} component={NavLink} to=\"/tiendas\" key={4} onClick={() => handleClick(\"/tiendas\")}>\r\n                    <ListItemIcon>  <StorefrontIcon /> </ListItemIcon>\r\n                    <ListItemText primary=\"Tiendas\" />\r\n                </ListItem>\r\n                \r\n                {\r\n                    logOut()\r\n                }\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n    \r\n    const window = undefined;\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    if(messages.sendMessage){\r\n        let titulo = messages.messages.title;\r\n        let message = messages.messages.message;\r\n        let status = messages.messages.status;\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tswal(titulo, message, status)\r\n\t\t\t\t.then(() => {\r\n                    return clearMessage();\r\n\t\t\t\t});\r\n\t\t\t}, 100\r\n\t\t);\r\n\t}\r\n\r\n\treturn(\r\n        <div>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    edge=\"start\"\r\n                    onClick={handleDrawerToggle}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap>\r\n                    DJ Adrenaline Shops\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                        paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                        paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            \r\n        </div>\r\n\r\n\t)\r\n};\r\n\r\nMenu.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateProps = ({users, messages}) => ({users, messages});\r\n\r\nexport default connect(mapStateProps, {logOutUser, clearMessage, setPayload})(Menu);\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from '../reducers'\r\nimport { createStore , applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport HomePage from '../pages/Home';\r\nimport HistoricoPage from '../pages/Historico';\r\nimport LoginPage from '../pages/Login';\r\nimport NotFoundPage from '../pages/NotFound';\r\nimport Usuarios from '../pages/Usuarios';\r\nimport Tiendas from '../pages/Tiendas';\r\nimport UsuariosEnrrolados from '../pages/UsuariosEnrrolados';\r\n\r\nimport Menu from './Menu';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Provider store={store}>\r\n\r\n      <Router>\r\n        <div className={classes.root}>\r\n            <Menu />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Switch>\r\n                  <Route exact path=\"/\">\r\n                    <HomePage type=\"0\" />\r\n                  </Route>\r\n                  <Route exact path=\"/home\">\r\n                    <HomePage />\r\n                  </Route>\r\n                  <Route exact path=\"/asistencia-historica\">\r\n                    <HistoricoPage />\r\n                  </Route>\r\n                  <Route exact path=\"/login\">\r\n                    <LoginPage />\r\n                  </Route>\r\n                  <Route exact path=\"/usuarios\">\r\n                    <Usuarios />\r\n                  </Route>\r\n                  <Route exact path=\"/usuarios-enrrolados\">\r\n                    <UsuariosEnrrolados />\r\n                  </Route>\r\n\r\n                  <Route exact path=\"/tiendas\">\r\n                    <Tiendas />\r\n                  </Route>\r\n                  <Route>\r\n                    <NotFoundPage />\r\n                  </Route>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/styles.scss';\n\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}